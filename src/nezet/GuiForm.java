/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package nezet;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import modell.Automata;
import modell.Bankfiok;

/**
 *
 * @author Admin230
 */
public class GuiForm extends javax.swing.JFrame {
    
    private Bankfiok bankfiok ;

    /**
     * Creates new form GuiForm
     */
    public GuiForm() {
        bankfiok = new Bankfiok();
        initComponents();
        
         setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                kilepes();
            }

  private void kilepes() {
        int válasz = JOptionPane.showOptionDialog(null, "Biztosan kilép a programból?", "Kilépés", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, new ImageIcon("útvonal/a/képhez.png"), new Object[]{"Folytatás", "Kilépés"}, "Folytatás");

        if (válasz == JOptionPane.YES_OPTION) {
            // Itt történik a kilépés a programból
            System.exit(0);
        }
    }
        });
        
        
        
        kivalasztasID();
        betoltAzonositok();
        betoltAllapot("jelentesek/automatak.ser");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        automatakLabel = new javax.swing.JLabel();
        AutomataComboBox = new javax.swing.JComboBox<>();
        osszegLabel = new javax.swing.JLabel();
        osszegMegjelenitLabel = new javax.swing.JLabel();
        mentesGomb = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        automatakLabel.setText("Automaták:");

        AutomataComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Automaták --" }));

        osszegLabel.setText("összeg:");

        osszegMegjelenitLabel.setText("________");

        mentesGomb.setText("Mentés");
        mentesGomb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mentesGombActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(automatakLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(AutomataComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(osszegLabel)
                .addGap(18, 18, 18)
                .addComponent(osszegMegjelenitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mentesGomb)
                .addGap(36, 36, 36))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(automatakLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AutomataComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(osszegLabel)
                    .addComponent(osszegMegjelenitLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addComponent(mentesGomb)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mentesGombActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mentesGombActionPerformed
     JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showSaveDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            String filePath = fileChooser.getSelectedFile().getAbsolutePath();

            try ( BufferedWriter writer = new BufferedWriter(new FileWriter(filePath))) {
                for (Automata automata : bankfiok.getAutomatak()) {
                    writer.write(automata.getAzonosito() + "," + automata.getPenz());
                    writer.newLine();
                }
                JOptionPane.showMessageDialog(this, "Bankfiók állapota sikeresen elmentve!");
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Hiba történt a mentés során!");
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_mentesGombActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuiForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> AutomataComboBox;
    private javax.swing.JLabel automatakLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton mentesGomb;
    private javax.swing.JLabel osszegLabel;
    private javax.swing.JLabel osszegMegjelenitLabel;
    // End of variables declaration//GEN-END:variables


        private void betoltAzonositok() {
        ArrayList<Automata> AutomataLista = (ArrayList<Automata>) bankfiok.getAutomatak();
        for (Automata automata : AutomataLista) {
            AutomataComboBox.addItem(automata.getAzonosito());
        }
    }
            private void betoltAllapot(String fileNev) {
        try ( FileInputStream fileIn = new FileInputStream(fileNev);  ObjectInputStream objectIn = new ObjectInputStream(fileIn)) {

            ArrayList<Automata> automatak = (ArrayList<Automata>) objectIn.readObject();
            bankfiok.setAutomatak(automatak); 

            System.out.println("Allapot beolvasva: " + fileNev);
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
        }
    }
            
        private Automata getKivalasztottAutomata() {
        String selectedAutomataID = AutomataComboBox.getSelectedItem().toString();
        return bankfiok.getAutomataByID(selectedAutomataID);
    }
        
           private void kivalasztasID() {
        ActionListener automataValasztasListener = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String selectedID = AutomataComboBox.getSelectedItem().toString();
                Automata selectedATM = bankfiok.getAutomataByID(selectedID);
                int penz = selectedATM.getPenz();
                
                osszegMegjelenitLabel.setText(String.valueOf(penz));
            }
        };

        AutomataComboBox.addActionListener(automataValasztasListener);
    }
    

}


